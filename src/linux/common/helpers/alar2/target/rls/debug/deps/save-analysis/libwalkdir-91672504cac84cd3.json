{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8","program":"/home/mla/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","walkdir","/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=91672504cac84cd3","-C","extra-filename=-91672504cac84cd3","--out-dir","/mnt/c/Users/malachma/OneDrive/malachma-privat/OneDrive/malachma/workspace/github.com/Azure/repair-script-library/src/linux/common/helpers/alar2/target/rls/debug/deps","-L","dependency=/mnt/c/Users/malachma/OneDrive/malachma-privat/OneDrive/malachma/workspace/github.com/Azure/repair-script-library/src/linux/common/helpers/alar2/target/rls/debug/deps","--extern","kernel32=/mnt/c/Users/malachma/OneDrive/malachma-privat/OneDrive/malachma/workspace/github.com/Azure/repair-script-library/src/linux/common/helpers/alar2/target/rls/debug/deps/libkernel32-8f8d1e3afea61a13.rmeta","--extern","winapi=/mnt/c/Users/malachma/OneDrive/malachma-privat/OneDrive/malachma/workspace/github.com/Azure/repair-script-library/src/linux/common/helpers/alar2/target/rls/debug/deps/libwinapi-6d12d0a46ef88b03.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mla/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/mnt/c/Users/malachma/OneDrive/malachma-privat/OneDrive/malachma/workspace/github.com/Azure/repair-script-library/src/linux/common/helpers/alar2/target/rls/debug/deps/libwalkdir-91672504cac84cd3.rmeta"},"prelude":{"crate_id":{"name":"walkdir","disambiguator":[2674269081093519633,9430100112049869277]},"crate_root":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src","external_crates":[{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16444769200449299423,17751526912405478841]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4150165762619742282,10084428854705346699]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17154149902455954331,10787439630250540476]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3551889228217061522,18098948565341830907]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[616005194320102788,15921775685612583979]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[16641574387685737100,7292927880071586320]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10423320894468080309,10477758161385623276]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15680994173287911211,8587509387955096358]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6787535578940220623,17568269130839787030]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17594861313346837805,7275947389262704147]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11399954785695891892,14851098529173350963]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[12494985972155115308,9730871930189483612]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15532488949252110002,6117296861090759943]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[1804911290426314532,6689449841577915250]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[8479710970850627223,6852362994577870122]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[12659285667184348883,16807697831197910537]}},{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[12098761462721718681,17445864288247971786]}}],"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":0,"byte_end":33125,"line_start":1,"line_end":967,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":0,"byte_end":33125,"line_start":1,"line_end":967,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":187},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":41},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":65},{"krate":0,"index":72},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":99},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":120},{"krate":0,"index":125},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":159},{"krate":0,"index":129},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":141}],"decl_id":null,"docs":"Crate `walkdir` provides an efficient and cross platform implementation\nof recursive directory traversal. Several options are exposed to control\niteration, such as whether to follow symbolic links (default off), limit the\nmaximum number of simultaneous open file descriptors and the ability to\nefficiently skip descending into directories.","sig":null,"attributes":[{"value":"*\nCrate `walkdir` provides an efficient and cross platform implementation\nof recursive directory traversal. Several options are exposed to control\niteration, such as whether to follow symbolic links (default off), limit the\nmaximum number of simultaneous open file descriptors and the ability to\nefficiently skip descending into directories.\n\nTo use this crate, add `walkdir` as a dependency to your project's\n`Cargo.toml`:\n\n```ignore\n[dependencies]\nwalkdir = \"0.1\"\n```\n\n# From the top\n\nThe `WalkDir` type builds iterators. The `WalkDirIterator` trait provides\nmethods for directory iterator adapters, such as efficiently pruning entries\nduring traversal. The `DirEntry` type describes values yielded by the iterator.\nFinally, the `Error` type is a small wrapper around `std::io::Error` with\nadditional information, such as if a loop was detected while following symbolic\nlinks (not enabled by default).\n\n# Example\n\nThe following code recursively iterates over the directory given and prints\nthe path for each entry:\n\n```rust,no_run\nuse walkdir::WalkDir;\n\nfor entry in WalkDir::new(\"foo\") {\n    let entry = entry.unwrap();\n    println!(\"{}\", entry.path().display());\n}\n```\n\nOr, if you'd like to iterate over all entries and ignore any errors that may\narise, use `filter_map`. (e.g., This code below will silently skip directories\nthat the owner of the running process does not have permission to access.)\n\n```rust,no_run\nuse walkdir::WalkDir;\n\nfor entry in WalkDir::new(\"foo\").into_iter().filter_map(|e| e.ok()) {\n    println!(\"{}\", entry.path().display());\n}\n```\n\n# Example: follow symbolic links\n\nThe same code as above, except `follow_links` is enabled:\n\n```rust,no_run\nuse walkdir::WalkDir;\n\nfor entry in WalkDir::new(\"foo\").follow_links(true) {\n    let entry = entry.unwrap();\n    println!(\"{}\", entry.path().display());\n}\n```\n\n# Example: skip hidden files and directories efficiently on unix\n\nThis uses the `filter_entry` iterator adapter to avoid yielding hidden files\nand directories efficiently:\n\n```rust,no_run\nuse walkdir::{DirEntry, WalkDir, WalkDirIterator};\n\nfn is_hidden(entry: &DirEntry) -> bool {\n    entry.file_name()\n         .to_str()\n         .map(|s| s.starts_with(\".\"))\n         .unwrap_or(false)\n}\n\nlet walker = WalkDir::new(\"foo\").into_iter();\nfor entry in walker.filter_entry(|e| !is_hidden(e)) {\n    let entry = entry.unwrap();\n    println!(\"{}\", entry.path().display());\n}\n```\n\n*/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":0,"byte_end":2410,"line_start":1,"line_end":86,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3570,"byte_end":3576,"line_start":126,"line_end":126,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result type for walkdir operations.","sig":null,"attributes":[{"value":"/ A result type for walkdir operations.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3079,"byte_end":3120,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3121,"byte_end":3124,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ Note that this result type embeds the error type in this crate. This","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3125,"byte_end":3197,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ is only useful if you care about the additional information provided by","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3198,"byte_end":3273,"line_start":121,"line_end":121,"column_start":1,"column_end":76}},{"value":"/ the error (such as the path associated with the error or whether a loop","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3274,"byte_end":3349,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/ was dectected). If you want things to Just Work, then you can use","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3350,"byte_end":3419,"line_start":123,"line_end":123,"column_start":1,"column_end":70}},{"value":"/ `io::Result` instead since the error type in this package will","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3420,"byte_end":3486,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/ automatically convert to an `io::Result` when using the `try!` macro.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3487,"byte_end":3560,"line_start":125,"line_end":125,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5781,"byte_end":5788,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"WalkDir","qualname":"::WalkDir","value":"WalkDir {  }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" A builder to create an iterator for recursively walking a directory.","sig":null,"attributes":[{"value":"/ A builder to create an iterator for recursively walking a directory.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3616,"byte_end":3688,"line_start":128,"line_end":128,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3689,"byte_end":3692,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Results are returned in depth first fashion, with directories yielded","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3693,"byte_end":3766,"line_start":130,"line_end":130,"column_start":1,"column_end":74}},{"value":"/ before their contents. The order is unspecified. Directory entries `.`","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3767,"byte_end":3841,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ and `..` are always omitted.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3842,"byte_end":3874,"line_start":132,"line_end":132,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3875,"byte_end":3878,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If an error occurs at any point during iteration, then it is returned in","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3879,"byte_end":3955,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"/ place of its corresponding directory entry and iteration continues as","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":3956,"byte_end":4029,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ normal. If an error occurs while opening a directory for reading, it","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4030,"byte_end":4102,"line_start":136,"line_end":136,"column_start":1,"column_end":73}},{"value":"/ is skipped. Iteration may be stopped at any time. When the iterator is","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4103,"byte_end":4177,"line_start":137,"line_end":137,"column_start":1,"column_end":75}},{"value":"/ destroyed, all resources associated with it are freed.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4178,"byte_end":4236,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4237,"byte_end":4240,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4241,"byte_end":4252,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4253,"byte_end":4256,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This type implements `IntoIterator` so that it may be used as the subject","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4257,"byte_end":4334,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ of a `for` loop. You may need to call `into_iter` explicitly if you want","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4335,"byte_end":4411,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ to use iterator adapters such as `filter_entry`.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4412,"byte_end":4464,"line_start":144,"line_end":144,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4465,"byte_end":4468,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Idiomatic use of this type should use method chaining to set desired","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4469,"byte_end":4541,"line_start":146,"line_end":146,"column_start":1,"column_end":73}},{"value":"/ options. For example, this only shows entries with a depth of `1`, `2`","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4542,"byte_end":4616,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ or `3` (relative to `foo`):","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4617,"byte_end":4648,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4649,"byte_end":4652,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4653,"byte_end":4671,"line_start":150,"line_end":150,"column_start":1,"column_end":19}},{"value":"/ use walkdir::WalkDir;","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4672,"byte_end":4697,"line_start":151,"line_end":151,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4698,"byte_end":4701,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ for entry in WalkDir::new(\"foo\").min_depth(1).max_depth(3) {","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4702,"byte_end":4766,"line_start":153,"line_end":153,"column_start":1,"column_end":65}},{"value":"/     let entry = entry.unwrap();","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4767,"byte_end":4802,"line_start":154,"line_end":154,"column_start":1,"column_end":36}},{"value":"/     println!(\"{}\", entry.path().display());","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4803,"byte_end":4850,"line_start":155,"line_end":155,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4851,"byte_end":4856,"line_start":156,"line_end":156,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4857,"byte_end":4864,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4865,"byte_end":4868,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Note that the iterator by default includes the top-most directory. Since","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4869,"byte_end":4945,"line_start":159,"line_end":159,"column_start":1,"column_end":77}},{"value":"/ this is the only directory yielded with depth `0`, it is easy to ignore it","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":4946,"byte_end":5024,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ with the `min_depth` setting:","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5025,"byte_end":5058,"line_start":161,"line_end":161,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5059,"byte_end":5062,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5063,"byte_end":5081,"line_start":163,"line_end":163,"column_start":1,"column_end":19}},{"value":"/ use walkdir::WalkDir;","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5082,"byte_end":5107,"line_start":164,"line_end":164,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5108,"byte_end":5111,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ for entry in WalkDir::new(\"foo\").min_depth(1) {","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5112,"byte_end":5163,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/     let entry = entry.unwrap();","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5164,"byte_end":5199,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/     println!(\"{}\", entry.path().display());","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5200,"byte_end":5247,"line_start":168,"line_end":168,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5248,"byte_end":5253,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5254,"byte_end":5261,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5262,"byte_end":5265,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ This will only return descendents of the `foo` directory and not `foo`","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5266,"byte_end":5340,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"/ itself.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5341,"byte_end":5352,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5353,"byte_end":5356,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # Loops","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5357,"byte_end":5368,"line_start":175,"line_end":175,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5369,"byte_end":5372,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ This iterator (like most/all recursive directory iterators) assumes that","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5373,"byte_end":5449,"line_start":177,"line_end":177,"column_start":1,"column_end":77}},{"value":"/ no loops can be made with *hard* links on your file system. In particular,","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5450,"byte_end":5528,"line_start":178,"line_end":178,"column_start":1,"column_end":79}},{"value":"/ this would require creating a hard link to a directory such that it creates","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5529,"byte_end":5608,"line_start":179,"line_end":179,"column_start":1,"column_end":80}},{"value":"/ a loop. On most platforms, this operation is illegal.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5609,"byte_end":5666,"line_start":180,"line_end":180,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5667,"byte_end":5670,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ Note that when following symbolic/soft links, loops are detected and an","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5671,"byte_end":5746,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/ error is reported.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":5747,"byte_end":5769,"line_start":183,"line_end":183,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6332,"byte_end":6335,"line_start":202,"line_end":202,"column_start":12,"column_end":15},"name":"new","qualname":"<WalkDir>::new","value":"pub fn new<P: AsRef<Path>>(P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a builder for a recursive directory iterator starting at the\n file path `root`. If `root` is a directory, then it is the first item\n yielded by the iterator. If `root` is a file, then it is the first\n and only item yielded by the iterator.\n","sig":null,"attributes":[{"value":"/ Create a builder for a recursive directory iterator starting at the","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6049,"byte_end":6120,"line_start":198,"line_end":198,"column_start":5,"column_end":76}},{"value":"/ file path `root`. If `root` is a directory, then it is the first item","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6125,"byte_end":6198,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/ yielded by the iterator. If `root` is a file, then it is the first","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6203,"byte_end":6273,"line_start":200,"line_end":200,"column_start":5,"column_end":75}},{"value":"/ and only item yielded by the iterator.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6278,"byte_end":6320,"line_start":201,"line_end":201,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6976,"byte_end":6985,"line_start":220,"line_end":220,"column_start":12,"column_end":21},"name":"min_depth","qualname":"<WalkDir>::min_depth","value":"pub fn min_depth(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum depth of entries yielded by the iterator.","sig":null,"attributes":[{"value":"/ Set the minimum depth of entries yielded by the iterator.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6680,"byte_end":6741,"line_start":215,"line_end":215,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6746,"byte_end":6749,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The smallest depth is `0` and always corresponds to the path given","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6754,"byte_end":6824,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/ to the `new` function on this type. Its direct descendents have depth","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6829,"byte_end":6902,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ `1`, and their descendents have depth `2`, and so on.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6907,"byte_end":6964,"line_start":219,"line_end":219,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7677,"byte_end":7686,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"max_depth","qualname":"<WalkDir>::max_depth","value":"pub fn max_depth(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum depth of entries yield by the iterator.","sig":null,"attributes":[{"value":"/ Set the maximum depth of entries yield by the iterator.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7201,"byte_end":7260,"line_start":228,"line_end":228,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7265,"byte_end":7268,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The smallest depth is `0` and always corresponds to the path given","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7273,"byte_end":7343,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ to the `new` function on this type. Its direct descendents have depth","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7348,"byte_end":7421,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ `1`, and their descendents have depth `2`, and so on.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7426,"byte_end":7483,"line_start":232,"line_end":232,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7488,"byte_end":7491,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that this will not simply filter the entries of the iterator, but","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7496,"byte_end":7570,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ it will actually avoid descending into directories when the depth is","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7575,"byte_end":7647,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/ exceeded.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7652,"byte_end":7665,"line_start":236,"line_end":236,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8592,"byte_end":8604,"line_start":260,"line_end":260,"column_start":12,"column_end":24},"name":"follow_links","qualname":"<WalkDir>::follow_links","value":"pub fn follow_links(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Follow symbolic links. By default, this is disabled.","sig":null,"attributes":[{"value":"/ Follow symbolic links. By default, this is disabled.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7902,"byte_end":7958,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7963,"byte_end":7966,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ When `yes` is `true`, symbolic links are followed as if they were","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":7971,"byte_end":8040,"line_start":247,"line_end":247,"column_start":5,"column_end":74}},{"value":"/ normal directories and files. If a symbolic link is broken or is","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8045,"byte_end":8113,"line_start":248,"line_end":248,"column_start":5,"column_end":73}},{"value":"/ involved in a loop, an error is yielded.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8118,"byte_end":8162,"line_start":249,"line_end":249,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8167,"byte_end":8170,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ When enabled, the yielded `DirEntry` values represent the target of","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8175,"byte_end":8246,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ the link while the path corresponds to the link. See the `DirEntry`","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8251,"byte_end":8322,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ type for more details.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8327,"byte_end":8353,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8358,"byte_end":8361,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Warning: bug with junctions on Window","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8366,"byte_end":8409,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8414,"byte_end":8417,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ There [is a bug](https://github.com/rust-lang/rust/issues/28528)","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8422,"byte_end":8490,"line_start":257,"line_end":257,"column_start":5,"column_end":73}},{"value":"/ that may affect following symbolic links on Windows when using","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8495,"byte_end":8561,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/ junctions.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8566,"byte_end":8580,"line_start":259,"line_end":259,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9764,"byte_end":9772,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"max_open","qualname":"<WalkDir>::max_open","value":"pub fn max_open(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of simultaneously open file descriptors used\n by the iterator.","sig":null,"attributes":[{"value":"/ Set the maximum number of simultaneously open file descriptors used","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8698,"byte_end":8769,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/ by the iterator.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8774,"byte_end":8794,"line_start":266,"line_end":266,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8799,"byte_end":8802,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ `n` must be greater than or equal to `1`. If `n` is `0`, then it is set","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8807,"byte_end":8882,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ to `1` automatically. If this is not set, then it defaults to some","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8887,"byte_end":8957,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ reasonably low number.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8962,"byte_end":8988,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":8993,"byte_end":8996,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This setting has no impact on the results yielded by the iterator","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9001,"byte_end":9070,"line_start":272,"line_end":272,"column_start":5,"column_end":74}},{"value":"/ (even when `n` is `1`). Instead, this setting represents a trade off","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9075,"byte_end":9147,"line_start":273,"line_end":273,"column_start":5,"column_end":77}},{"value":"/ between scarce resources (file descriptors) and memory. Namely, when","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9152,"byte_end":9224,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/ the maximum number of file descriptors is reached and a new directory","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9229,"byte_end":9302,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/ needs to be opened to continue iteration, then a previous directory","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9307,"byte_end":9378,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ handle is closed and has its unyielded entries stored in memory. In","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9383,"byte_end":9454,"line_start":277,"line_end":277,"column_start":5,"column_end":76}},{"value":"/ practice, this is a satisfying trade off because it scales with respect","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9459,"byte_end":9534,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ to the *depth* of your file tree. Therefore, low values (even `1`) are","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9539,"byte_end":9613,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ acceptable.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9618,"byte_end":9633,"line_start":280,"line_end":280,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9638,"byte_end":9641,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this value does not impact the number of system calls made by","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9646,"byte_end":9721,"line_start":282,"line_end":282,"column_start":5,"column_end":80}},{"value":"/ an exhausted iterator.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9726,"byte_end":9752,"line_start":283,"line_end":283,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10417,"byte_end":10424,"line_start":306,"line_end":306,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<WalkDir>::sort_by","value":"pub fn sort_by<F>(Self, F) -> Self where F: FnMut(&OsString, &OsString) ->\nOrdering + 'static","parent":null,"children":[],"decl_id":null,"docs":" Set a function for sorting directory entries.","sig":null,"attributes":[{"value":"/ Set a function for sorting directory entries.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9912,"byte_end":9961,"line_start":292,"line_end":292,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9966,"byte_end":9969,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ If a compare function is set, the resulting iterator will return all","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":9974,"byte_end":10046,"line_start":294,"line_end":294,"column_start":5,"column_end":77}},{"value":"/ paths in sorted order. The compare function will be called to compare","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10051,"byte_end":10124,"line_start":295,"line_end":295,"column_start":5,"column_end":78}},{"value":"/ names from entries from the same directory using only the name of the","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10129,"byte_end":10202,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ entry.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10207,"byte_end":10217,"line_start":297,"line_end":297,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10222,"byte_end":10225,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```rust,no-run","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10230,"byte_end":10248,"line_start":299,"line_end":299,"column_start":5,"column_end":23}},{"value":"/ use std::cmp;","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10253,"byte_end":10270,"line_start":300,"line_end":300,"column_start":5,"column_end":22}},{"value":"/ use std::ffi::OsString;","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10275,"byte_end":10302,"line_start":301,"line_end":301,"column_start":5,"column_end":32}},{"value":"/ use walkdir::WalkDir;","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10307,"byte_end":10332,"line_start":302,"line_end":302,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10337,"byte_end":10340,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ WalkDir::new(\"foo\").sort_by(|a,b| a.cmp(b));","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10345,"byte_end":10393,"line_start":304,"line_end":304,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10398,"byte_end":10405,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10995,"byte_end":11010,"line_start":330,"line_end":330,"column_start":11,"column_end":26},"name":"WalkDirIterator","qualname":"::WalkDirIterator","value":"WalkDirIterator: Iterator","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":" A trait for recursive directory iterators.\n","sig":null,"attributes":[{"value":"/ A trait for recursive directory iterators.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10938,"byte_end":10984,"line_start":329,"line_end":329,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12549,"byte_end":12565,"line_start":372,"line_end":372,"column_start":8,"column_end":24},"name":"skip_current_dir","qualname":"::WalkDirIterator::skip_current_dir","value":"pub fn skip_current_dir(&mut Self)","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Skips the current directory.","sig":null,"attributes":[{"value":"/ Skips the current directory.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11027,"byte_end":11059,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11064,"byte_end":11067,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This causes the iterator to stop traversing the contents of the least","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11072,"byte_end":11145,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ recently yielded directory. This means any remaining entries in that","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11150,"byte_end":11222,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ directory will be skipped (including sub-directories).","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11227,"byte_end":11285,"line_start":335,"line_end":335,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11290,"byte_end":11293,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Note that the ergnomics of this method are questionable since it","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11298,"byte_end":11366,"line_start":337,"line_end":337,"column_start":5,"column_end":73}},{"value":"/ borrows the iterator mutably. Namely, you must write out the looping","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11371,"byte_end":11443,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ condition manually. For example, to skip hidden entries efficiently on","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11448,"byte_end":11522,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/ unix systems:","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11527,"byte_end":11544,"line_start":340,"line_end":340,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11549,"byte_end":11552,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11557,"byte_end":11575,"line_start":342,"line_end":342,"column_start":5,"column_end":23}},{"value":"/ use walkdir::{DirEntry, WalkDir, WalkDirIterator};","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11580,"byte_end":11634,"line_start":343,"line_end":343,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11639,"byte_end":11642,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ fn is_hidden(entry: &DirEntry) -> bool {","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11647,"byte_end":11691,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/     entry.file_name()","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11696,"byte_end":11721,"line_start":346,"line_end":346,"column_start":5,"column_end":30}},{"value":"/          .to_str()","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11726,"byte_end":11748,"line_start":347,"line_end":347,"column_start":5,"column_end":27}},{"value":"/          .map(|s| s.starts_with(\".\"))","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11753,"byte_end":11794,"line_start":348,"line_end":348,"column_start":5,"column_end":46}},{"value":"/          .unwrap_or(false)","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11799,"byte_end":11829,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11834,"byte_end":11839,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11844,"byte_end":11847,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let mut it = WalkDir::new(\"foo\").into_iter();","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11852,"byte_end":11901,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ loop {","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11906,"byte_end":11916,"line_start":353,"line_end":353,"column_start":5,"column_end":15}},{"value":"/     let entry = match it.next() {","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11921,"byte_end":11958,"line_start":354,"line_end":354,"column_start":5,"column_end":42}},{"value":"/         None => break,","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11963,"byte_end":11989,"line_start":355,"line_end":355,"column_start":5,"column_end":31}},{"value":"/         Some(Err(err)) => panic!(\"ERROR: {}\", err),","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11994,"byte_end":12049,"line_start":356,"line_end":356,"column_start":5,"column_end":60}},{"value":"/         Some(Ok(entry)) => entry,","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12054,"byte_end":12091,"line_start":357,"line_end":357,"column_start":5,"column_end":42}},{"value":"/     };","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12096,"byte_end":12106,"line_start":358,"line_end":358,"column_start":5,"column_end":15}},{"value":"/     if is_hidden(&entry) {","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12111,"byte_end":12141,"line_start":359,"line_end":359,"column_start":5,"column_end":35}},{"value":"/         if entry.file_type().is_dir() {","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12146,"byte_end":12189,"line_start":360,"line_end":360,"column_start":5,"column_end":48}},{"value":"/             it.skip_current_dir();","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12194,"byte_end":12232,"line_start":361,"line_end":361,"column_start":5,"column_end":43}},{"value":"/         }","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12237,"byte_end":12250,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/         continue;","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12255,"byte_end":12276,"line_start":363,"line_end":363,"column_start":5,"column_end":26}},{"value":"/     }","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12281,"byte_end":12290,"line_start":364,"line_end":364,"column_start":5,"column_end":14}},{"value":"/     println!(\"{}\", entry.path().display());","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12295,"byte_end":12342,"line_start":365,"line_end":365,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12347,"byte_end":12352,"line_start":366,"line_end":366,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12357,"byte_end":12364,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12369,"byte_end":12372,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ You may find it more convenient to use the `filter_entry` iterator","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12377,"byte_end":12447,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/ adapter. (See its documentation for the same example functionality as","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12452,"byte_end":12525,"line_start":370,"line_end":370,"column_start":5,"column_end":78}},{"value":"/ above.)","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12530,"byte_end":12541,"line_start":371,"line_end":371,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13947,"byte_end":13959,"line_start":408,"line_end":408,"column_start":8,"column_end":20},"name":"filter_entry","qualname":"::WalkDirIterator::filter_entry","value":"pub fn filter_entry<P>(Self, P) -> IterFilterEntry<Self, P> where Self: Sized,\nP: FnMut(&DirEntry) -> bool","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Yields only entries which satisfy the given predicate and skips\n descending into directories that do not satisfy the given predicate.","sig":null,"attributes":[{"value":"/ Yields only entries which satisfy the given predicate and skips","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12583,"byte_end":12650,"line_start":374,"line_end":374,"column_start":5,"column_end":72}},{"value":"/ descending into directories that do not satisfy the given predicate.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12655,"byte_end":12727,"line_start":375,"line_end":375,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12732,"byte_end":12735,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The predicate is applied to all entries. If the predicate is","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12740,"byte_end":12804,"line_start":377,"line_end":377,"column_start":5,"column_end":69}},{"value":"/ true, iteration carries on as normal. If the predicate is false, the","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12809,"byte_end":12881,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/ entry is ignored and if it is a directory, it is not descended into.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12886,"byte_end":12958,"line_start":379,"line_end":379,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12963,"byte_end":12966,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ This is often more convenient to use than `skip_current_dir`. For","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":12971,"byte_end":13040,"line_start":381,"line_end":381,"column_start":5,"column_end":74}},{"value":"/ example, to skip hidden files and directories efficiently on unix","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13045,"byte_end":13114,"line_start":382,"line_end":382,"column_start":5,"column_end":74}},{"value":"/ systems:","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13119,"byte_end":13131,"line_start":383,"line_end":383,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13136,"byte_end":13139,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13144,"byte_end":13162,"line_start":385,"line_end":385,"column_start":5,"column_end":23}},{"value":"/ use walkdir::{DirEntry, WalkDir, WalkDirIterator};","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13167,"byte_end":13221,"line_start":386,"line_end":386,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13226,"byte_end":13229,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ fn is_hidden(entry: &DirEntry) -> bool {","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13234,"byte_end":13278,"line_start":388,"line_end":388,"column_start":5,"column_end":49}},{"value":"/     entry.file_name()","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13283,"byte_end":13308,"line_start":389,"line_end":389,"column_start":5,"column_end":30}},{"value":"/          .to_str()","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13313,"byte_end":13335,"line_start":390,"line_end":390,"column_start":5,"column_end":27}},{"value":"/          .map(|s| s.starts_with(\".\"))","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13340,"byte_end":13381,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/          .unwrap_or(false)","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13386,"byte_end":13416,"line_start":392,"line_end":392,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13421,"byte_end":13426,"line_start":393,"line_end":393,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13431,"byte_end":13434,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ for entry in WalkDir::new(\"foo\")","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13439,"byte_end":13475,"line_start":395,"line_end":395,"column_start":5,"column_end":41}},{"value":"/                      .into_iter()","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13480,"byte_end":13517,"line_start":396,"line_end":396,"column_start":5,"column_end":42}},{"value":"/                      .filter_entry(|e| !is_hidden(e)) {","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13522,"byte_end":13581,"line_start":397,"line_end":397,"column_start":5,"column_end":64}},{"value":"/     let entry = entry.unwrap();","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13586,"byte_end":13621,"line_start":398,"line_end":398,"column_start":5,"column_end":40}},{"value":"/     println!(\"{}\", entry.path().display());","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13626,"byte_end":13673,"line_start":399,"line_end":399,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13678,"byte_end":13683,"line_start":400,"line_end":400,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13688,"byte_end":13695,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13700,"byte_end":13703,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Note that the iterator will still yield errors for reading entries that","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13708,"byte_end":13783,"line_start":403,"line_end":403,"column_start":5,"column_end":80}},{"value":"/ may not satisfy the predicate.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13788,"byte_end":13822,"line_start":404,"line_end":404,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13827,"byte_end":13830,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that entries skipped with `min_depth` and `max_depth` are not","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13835,"byte_end":13905,"line_start":406,"line_end":406,"column_start":5,"column_end":75}},{"value":"/ passed to this predicate.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":13910,"byte_end":13939,"line_start":407,"line_end":407,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":14515,"byte_end":14519,"line_start":421,"line_end":421,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" An iterator for recursively descending into a directory.","sig":null,"attributes":[{"value":"/ An iterator for recursively descending into a directory.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":14140,"byte_end":14200,"line_start":414,"line_end":414,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":14201,"byte_end":14204,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ A value with this type must be constructed with the `WalkDir` type, which","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":14205,"byte_end":14282,"line_start":416,"line_end":416,"column_start":1,"column_end":78}},{"value":"/ uses a builder pattern to set options such as min/max depth, max open file","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":14283,"byte_end":14361,"line_start":417,"line_end":417,"column_start":1,"column_end":79}},{"value":"/ descriptors and whether the iterator should follow symbolic links.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":14362,"byte_end":14432,"line_start":418,"line_end":418,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":14433,"byte_end":14436,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ The order of elements yielded by this iterator is unspecified.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":14437,"byte_end":14503,"line_start":420,"line_end":420,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":72},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":17162,"byte_end":17170,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::DirEntry","value":"DirEntry {  }","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"decl_id":null,"docs":" A directory entry.","sig":null,"attributes":[{"value":"/ A directory entry.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16451,"byte_end":16473,"line_start":469,"line_end":469,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16474,"byte_end":16477,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ This is the type of value that is yielded from the iterators defined in","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16478,"byte_end":16553,"line_start":471,"line_end":471,"column_start":1,"column_end":76}},{"value":"/ this crate.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16554,"byte_end":16569,"line_start":472,"line_end":472,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16570,"byte_end":16573,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ # Differences with `std::fs::DirEntry`","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16574,"byte_end":16616,"line_start":474,"line_end":474,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16617,"byte_end":16620,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ This type mostly mirrors the type by the same name in `std::fs`. There are","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16621,"byte_end":16699,"line_start":476,"line_end":476,"column_start":1,"column_end":79}},{"value":"/ some differences however:","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16700,"byte_end":16729,"line_start":477,"line_end":477,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16730,"byte_end":16733,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ * All recursive directory iterators must inspect the entry's type.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16734,"byte_end":16804,"line_start":479,"line_end":479,"column_start":1,"column_end":71}},{"value":"/ Therefore, the value is stored and its access is guaranteed to be cheap and","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16805,"byte_end":16884,"line_start":480,"line_end":480,"column_start":1,"column_end":80}},{"value":"/ successful.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16885,"byte_end":16900,"line_start":481,"line_end":481,"column_start":1,"column_end":16}},{"value":"/ * `path` and `file_name` return borrowed variants.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16901,"byte_end":16955,"line_start":482,"line_end":482,"column_start":1,"column_end":55}},{"value":"/ * If `follow_links` was enabled on the originating iterator, then all","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":16956,"byte_end":17029,"line_start":483,"line_end":483,"column_start":1,"column_end":74}},{"value":"/ operations except for `path` operate on the link target. Otherwise, all","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":17030,"byte_end":17105,"line_start":484,"line_end":484,"column_start":1,"column_end":76}},{"value":"/ operations operate on the symbolic link.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":17106,"byte_end":17150,"line_start":485,"line_end":485,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23755,"byte_end":23759,"line_start":671,"line_end":671,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" The full path that this entry represents.","sig":null,"attributes":[{"value":"/ The full path that this entry represents.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23184,"byte_end":23229,"line_start":660,"line_end":660,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23234,"byte_end":23237,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the parents of this entry up to the","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23242,"byte_end":23317,"line_start":662,"line_end":662,"column_start":5,"column_end":80}},{"value":"/ root initially given to `WalkDir::new` with the file name of this","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23322,"byte_end":23391,"line_start":663,"line_end":663,"column_start":5,"column_end":74}},{"value":"/ entry.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23396,"byte_end":23406,"line_start":664,"line_end":664,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23411,"byte_end":23414,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ Note that this *always* returns the path reported by the underlying","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23419,"byte_end":23490,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/ directory entry, even when symbolic links are followed. To get the","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23495,"byte_end":23565,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ target path, use `path_is_symbolic_link` to (cheaply) check if","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23570,"byte_end":23636,"line_start":668,"line_end":668,"column_start":5,"column_end":71}},{"value":"/ this entry corresponds to a symbolic link, and `std::fs::read_link` to","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23641,"byte_end":23715,"line_start":669,"line_end":669,"column_start":5,"column_end":79}},{"value":"/ resolve the target.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23720,"byte_end":23743,"line_start":670,"line_end":670,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24145,"byte_end":24166,"line_start":681,"line_end":681,"column_start":12,"column_end":33},"name":"path_is_symbolic_link","qualname":"<DirEntry>::path_is_symbolic_link","value":"pub fn path_is_symbolic_link(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if and only if this entry was created from a symbolic\n link. This is unaffected by the `follow_links` setting.","sig":null,"attributes":[{"value":"/ Returns `true` if and only if this entry was created from a symbolic","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23808,"byte_end":23880,"line_start":675,"line_end":675,"column_start":5,"column_end":77}},{"value":"/ link. This is unaffected by the `follow_links` setting.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23885,"byte_end":23944,"line_start":676,"line_end":676,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23949,"byte_end":23952,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ When `true`, the value returned by the `path` method is a","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23957,"byte_end":24018,"line_start":678,"line_end":678,"column_start":5,"column_end":66}},{"value":"/ symbolic link name. To get the full target path, you must call","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24023,"byte_end":24089,"line_start":679,"line_end":679,"column_start":5,"column_end":71}},{"value":"/ `std::fs::read_link(entry.path())`.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24094,"byte_end":24133,"line_start":680,"line_end":680,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24669,"byte_end":24677,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub fn metadata(&Self) -> Result<fs::Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Return the metadata for the file that this entry points to.","sig":null,"attributes":[{"value":"/ Return the metadata for the file that this entry points to.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24244,"byte_end":24307,"line_start":685,"line_end":685,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24312,"byte_end":24315,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ This will follow symbolic links if and only if the `WalkDir` value","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24320,"byte_end":24390,"line_start":687,"line_end":687,"column_start":5,"column_end":75}},{"value":"/ has `follow_links` enabled.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24395,"byte_end":24426,"line_start":688,"line_end":688,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24431,"byte_end":24434,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # Platform behavior","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24439,"byte_end":24462,"line_start":690,"line_end":690,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24467,"byte_end":24470,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ This always calls `std::fs::symlink_metadata`.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24475,"byte_end":24525,"line_start":692,"line_end":692,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24530,"byte_end":24533,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ If this entry is a symbolic link and `follow_links` is enabled, then","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24538,"byte_end":24610,"line_start":694,"line_end":694,"column_start":5,"column_end":77}},{"value":"/ `std::fs::metadata` is called instead.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24615,"byte_end":24657,"line_start":695,"line_end":695,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25155,"byte_end":25164,"line_start":710,"line_end":710,"column_start":12,"column_end":21},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub fn file_type(&Self) -> fs::FileType","parent":null,"children":[],"decl_id":null,"docs":" Return the file type for the file that this entry points to.","sig":null,"attributes":[{"value":"/ Return the file type for the file that this entry points to.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24905,"byte_end":24969,"line_start":704,"line_end":704,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24974,"byte_end":24977,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ If this is a symbolic link and `follow_links` is `true`, then this","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":24982,"byte_end":25052,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ returns the type of the target.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25057,"byte_end":25092,"line_start":707,"line_end":707,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25097,"byte_end":25100,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ This never makes any system calls.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25105,"byte_end":25143,"line_start":709,"line_end":709,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25368,"byte_end":25377,"line_start":718,"line_end":718,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Return the file name of this entry.","sig":null,"attributes":[{"value":"/ Return the file name of this entry.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25217,"byte_end":25256,"line_start":714,"line_end":714,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25261,"byte_end":25264,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this entry has no file name (e.g., `/`), then the full path is","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25269,"byte_end":25338,"line_start":716,"line_end":716,"column_start":5,"column_end":74}},{"value":"/ returned.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25343,"byte_end":25356,"line_start":717,"line_end":717,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25789,"byte_end":25794,"line_start":727,"line_end":727,"column_start":12,"column_end":17},"name":"depth","qualname":"<DirEntry>::depth","value":"pub fn depth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the depth at which this entry was created relative to the root.","sig":null,"attributes":[{"value":"/ Returns the depth at which this entry was created relative to the root.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25479,"byte_end":25554,"line_start":722,"line_end":722,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25559,"byte_end":25562,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The smallest depth is `0` and always corresponds to the path given","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25567,"byte_end":25637,"line_start":724,"line_end":724,"column_start":5,"column_end":75}},{"value":"/ to the `new` function on `WalkDir`. Its direct descendents have depth","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25642,"byte_end":25715,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ `1`, and their descendents have depth `2`, and so on.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":25720,"byte_end":25777,"line_start":726,"line_end":726,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":115},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27839,"byte_end":27854,"line_start":798,"line_end":798,"column_start":12,"column_end":27},"name":"IterFilterEntry","qualname":"::IterFilterEntry","value":"IterFilterEntry {  }","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"decl_id":null,"docs":" A recursive directory iterator that skips entries.","sig":null,"attributes":[{"value":"/ A recursive directory iterator that skips entries.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27250,"byte_end":27304,"line_start":785,"line_end":785,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27305,"byte_end":27308,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ Directories that fail the predicate `P` are skipped. Namely, they are","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27309,"byte_end":27382,"line_start":787,"line_end":787,"column_start":1,"column_end":74}},{"value":"/ never yielded and never descended into.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27383,"byte_end":27426,"line_start":788,"line_end":788,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27427,"byte_end":27430,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ Entries that are skipped with the `min_depth` and `max_depth` options are","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27431,"byte_end":27508,"line_start":790,"line_end":790,"column_start":1,"column_end":78}},{"value":"/ not passed through this filter.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27509,"byte_end":27544,"line_start":791,"line_end":791,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27545,"byte_end":27548,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ If opening a handle to a directory resulted in an error, then it is yielded","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27549,"byte_end":27628,"line_start":793,"line_end":793,"column_start":1,"column_end":80}},{"value":"/ and no corresponding call to the predicate is made.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27629,"byte_end":27684,"line_start":794,"line_end":794,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27685,"byte_end":27688,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/ Type parameter `I` refers to the underlying iterator and `P` refers to the","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27689,"byte_end":27767,"line_start":796,"line_end":796,"column_start":1,"column_end":79}},{"value":"/ predicate, which is usually `FnMut(&DirEntry) -> bool`.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27768,"byte_end":27827,"line_start":797,"line_end":797,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":147},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29507,"byte_end":29512,"line_start":849,"line_end":849,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":" An error produced by recursively walking a directory.","sig":null,"attributes":[{"value":"/ An error produced by recursively walking a directory.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":28775,"byte_end":28832,"line_start":833,"line_end":833,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":28833,"byte_end":28836,"line_start":834,"line_end":834,"column_start":1,"column_end":4}},{"value":"/ This error type is a light wrapper around `std::io::Error`. In particular,","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":28837,"byte_end":28915,"line_start":835,"line_end":835,"column_start":1,"column_end":79}},{"value":"/ it adds the following information:","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":28916,"byte_end":28954,"line_start":836,"line_end":836,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":28955,"byte_end":28958,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ * The depth at which the error occurred in the file tree, relative to the","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":28959,"byte_end":29036,"line_start":838,"line_end":838,"column_start":1,"column_end":78}},{"value":"/ root.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29037,"byte_end":29046,"line_start":839,"line_end":839,"column_start":1,"column_end":10}},{"value":"/ * The path, if any, associated with the IO error.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29047,"byte_end":29100,"line_start":840,"line_end":840,"column_start":1,"column_end":54}},{"value":"/ * An indication that a loop occurred when following symbolic links. In this","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29101,"byte_end":29180,"line_start":841,"line_end":841,"column_start":1,"column_end":80}},{"value":"/ case, there is no underlying IO error.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29181,"byte_end":29223,"line_start":842,"line_end":842,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29224,"byte_end":29227,"line_start":843,"line_end":843,"column_start":1,"column_end":4}},{"value":"/ To maintain good ergnomics, this type has a","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29228,"byte_end":29275,"line_start":844,"line_end":844,"column_start":1,"column_end":48}},{"value":"/ `impl From<Error> for std::io::Error` defined so that you may use an","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29276,"byte_end":29348,"line_start":845,"line_end":845,"column_start":1,"column_end":73}},{"value":"/ `io::Result` with methods in this crate if you don't care about accessing","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29349,"byte_end":29426,"line_start":846,"line_end":846,"column_start":1,"column_end":78}},{"value":"/ the underlying error data in a structured form.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29427,"byte_end":29478,"line_start":847,"line_end":847,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29941,"byte_end":29945,"line_start":865,"line_end":865,"column_start":12,"column_end":16},"name":"path","qualname":"<Error>::path","value":"pub fn path(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path associated with this error if one exists.","sig":null,"attributes":[{"value":"/ Returns the path associated with this error if one exists.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29712,"byte_end":29774,"line_start":861,"line_end":861,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29779,"byte_end":29782,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ For example, if an error occurred while opening a directory handle,","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29787,"byte_end":29858,"line_start":863,"line_end":863,"column_start":5,"column_end":76}},{"value":"/ the error will include the path passed to `std::fs::read_dir`.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29863,"byte_end":29929,"line_start":864,"line_end":864,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30546,"byte_end":30559,"line_start":882,"line_end":882,"column_start":12,"column_end":25},"name":"loop_ancestor","qualname":"<Error>::loop_ancestor","value":"pub fn loop_ancestor(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path at which a cycle was detected.","sig":null,"attributes":[{"value":"/ Returns the path at which a cycle was detected.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30209,"byte_end":30260,"line_start":873,"line_end":873,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30265,"byte_end":30268,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ If no cycle was detected, `None` is returned.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30273,"byte_end":30322,"line_start":875,"line_end":875,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30327,"byte_end":30330,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ A cycle is detected when a directory entry is equivalent to one of","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30335,"byte_end":30405,"line_start":877,"line_end":877,"column_start":5,"column_end":75}},{"value":"/ its ancestors.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30410,"byte_end":30428,"line_start":878,"line_end":878,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30433,"byte_end":30436,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ To get the path to the child directory entry in the cycle, use the","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30441,"byte_end":30511,"line_start":880,"line_end":880,"column_start":5,"column_end":75}},{"value":"/ `path` method.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30516,"byte_end":30534,"line_start":881,"line_end":881,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":31033,"byte_end":31038,"line_start":894,"line_end":894,"column_start":12,"column_end":17},"name":"depth","qualname":"<Error>::depth","value":"pub fn depth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the depth at which this error occurred relative to the root.","sig":null,"attributes":[{"value":"/ Returns the depth at which this error occurred relative to the root.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30726,"byte_end":30798,"line_start":889,"line_end":889,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30803,"byte_end":30806,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ The smallest depth is `0` and always corresponds to the path given","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30811,"byte_end":30881,"line_start":891,"line_end":891,"column_start":5,"column_end":75}},{"value":"/ to the `new` function on `WalkDir`. Its direct descendents have depth","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30886,"byte_end":30959,"line_start":892,"line_end":892,"column_start":5,"column_end":78}},{"value":"/ `1`, and their descendents have depth `2`, and so on.","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":30964,"byte_end":31021,"line_start":893,"line_end":893,"column_start":5,"column_end":62}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6035,"byte_end":6042,"line_start":197,"line_end":197,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10619,"byte_end":10626,"line_start":313,"line_end":313,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":17648,"byte_end":17652,"line_start":499,"line_end":499,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":18796,"byte_end":18800,"line_start":532,"line_end":532,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":19026,"byte_end":19030,"line_start":543,"line_end":543,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":22467,"byte_end":22474,"line_start":634,"line_end":634,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":22663,"byte_end":22670,"line_start":642,"line_end":642,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23169,"byte_end":23177,"line_start":659,"line_end":659,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":26885,"byte_end":26893,"line_start":768,"line_end":768,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27124,"byte_end":27132,"line_start":779,"line_end":779,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27919,"byte_end":27934,"line_start":803,"line_end":803,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":28570,"byte_end":28585,"line_start":825,"line_end":825,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29700,"byte_end":29705,"line_start":860,"line_end":860,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":31731,"byte_end":31736,"line_start":923,"line_end":923,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":32166,"byte_end":32171,"line_start":939,"line_end":939,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":32833,"byte_end":32838,"line_start":958,"line_end":958,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":6035,"byte_end":6042,"line_start":197,"line_end":197,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":10619,"byte_end":10626,"line_start":313,"line_end":313,"column_start":23,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":5585}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":11012,"byte_end":11020,"line_start":330,"line_end":330,"column_start":28,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":5680},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":17648,"byte_end":17652,"line_start":499,"line_end":499,"column_start":19,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":5680}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":18796,"byte_end":18800,"line_start":532,"line_end":532,"column_start":26,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":58},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":19026,"byte_end":19030,"line_start":543,"line_end":543,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":22467,"byte_end":22474,"line_start":634,"line_end":634,"column_start":6,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":22663,"byte_end":22670,"line_start":642,"line_end":642,"column_start":19,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":65},"to":{"krate":2,"index":5680}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":23169,"byte_end":23177,"line_start":659,"line_end":659,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":26885,"byte_end":26893,"line_start":768,"line_end":768,"column_start":16,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":1834}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27124,"byte_end":27132,"line_start":779,"line_end":779,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":72},"to":{"krate":2,"index":7020}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":27919,"byte_end":27934,"line_start":803,"line_end":803,"column_start":25,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":5680}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":28570,"byte_end":28585,"line_start":825,"line_end":825,"column_start":32,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":115},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":29700,"byte_end":29705,"line_start":860,"line_end":860,"column_start":6,"column_end":11},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":31731,"byte_end":31736,"line_start":923,"line_end":923,"column_start":23,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":1752}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":32166,"byte_end":32171,"line_start":939,"line_end":939,"column_start":23,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":147},"to":{"krate":2,"index":7025}},{"span":{"file_name":"/home/mla/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-0.1.8/src/lib.rs","byte_start":32833,"byte_end":32838,"line_start":958,"line_end":958,"column_start":26,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":2792},"to":{"krate":2,"index":2061}}]}